{"version":3,"file":"main.min.js","mappings":"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","sources":["webpack://uxp-template-ps-starter/./src/fileSystem/basic.ts","webpack://uxp-template-ps-starter/./src/fileSystem/root.ts","webpack://uxp-template-ps-starter/./src/fileSystem/saveSystem.ts","webpack://uxp-template-ps-starter/./src/index.ts","webpack://uxp-template-ps-starter/external commonjs2 \"fs\"","webpack://uxp-template-ps-starter/external commonjs2 \"os\"","webpack://uxp-template-ps-starter/external commonjs2 \"photoshop\"","webpack://uxp-template-ps-starter/external commonjs2 \"uxp\"","webpack://uxp-template-ps-starter/webpack/bootstrap","webpack://uxp-template-ps-starter/webpack/before-startup","webpack://uxp-template-ps-starter/webpack/startup","webpack://uxp-template-ps-starter/webpack/after-startup"],"sourcesContent":["import { app } from 'photoshop';\r\nimport fs from 'fs';\r\n\r\nexport const mkdirUnderDocument:(folderName:string, docPath:string)=>Promise<string|false> = async (folderName, docPath) => {\r\n    try {\r\n        const saveFolder = path.join(docPath, folderName);\r\n        await fs.mkdir(saveFolder);\r\n        return saveFolder;\r\n    } catch (e) {\r\n        await app.showAlert(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const mkdir:(folderPath:string)=>Promise<boolean> = async (folderPath) => {\r\n    try {\r\n        const f = await fs.lstat(folderPath);\r\n        return f.isDirectory();\r\n    } catch (e) {\r\n        await fs.mkdir(folderPath);//if folder isn't exist, it'll generate\r\n        return true;\r\n    }\r\n};","import os from 'os';\r\n\r\nexport const DESKTOPPATH:string = path.join(os.homedir(), 'Desktop');\r\n\r\n//file protocol. you need this. using on older version than Photoshop 24.4 \r\nconst PROTOCOL = 'file:';\r\n\r\nexport const setProtocol:(filePath:string)=>string = filePath => HASPROTOCOL ? path.join(PROTOCOL,filePath) : filePath ;\r\n","import { app, core } from 'photoshop';\r\nimport fs from 'fs';\r\nimport uxp from 'uxp';\r\nimport { mkdir } from './basic';\r\nimport { DESKTOPPATH, setProtocol } from './root';\r\n\r\n/* \r\nsome examples on document use uxp local filesystem module as a fs.\r\nbut it can be confused with fs module so use variable uxpfs instead of fs.\r\n*/\r\nconst uxpfs = uxp.storage.localFileSystem;\r\n\r\n// if you activate the code below(import path), you'll notice some path methods won't work. \r\n// import path from 'path'\r\n\r\n/**\r\n * == Note ==\r\n * \r\n * since UXP updated to 6.4, It has Node.js style fileSystem.\r\n * but this is not same as Node.js, It's just like Node.js.\r\n * they have differences between them.\r\n * even if were web developer or enginner, I recommend to read the document carefully.\r\n * \r\n * you need require or import for using fs module.\r\n * but do not require or import path module.\r\n * path Object isn't module. this is a Window(global) object.\r\n * and UXP has uncomplited path module.\r\n * if you required it, you'll notice some methods won't be work.\r\n * because uncomplited path module takes over path object.\r\n * \r\n * on the document, path Object is classified as a Window object.\r\n * https://developer.adobe.com/photoshop/uxp/2022/uxp-api/reference-js/Global%20Members/Path\r\n * \r\n * on the other hand, fs is classified as a module.\r\n * https://developer.adobe.com/photoshop/uxp/2022/uxp-api/reference-js/Modules/fs\r\n * \r\n */\r\n\r\nconst whiteColor = new app.SolidColor();\r\nwhiteColor.rgb.red = 255;\r\nwhiteColor.rgb.green = 255;\r\nwhiteColor.rgb.blue = 255;\r\n\r\n/*\r\n    ** Note ** \r\n    Document save as method (and some other methods too) can only recieve Entry Object path.\r\n    they can't recieve string file path.\r\n    if you want to save file through string path, use methods below.\r\n    uxpfs.getEntryWithUrl or uxpfs.createEntryWithUrl.\r\n    some file picker, like uxpfs.getFileForSaving gives Entry Object so that's okay to\r\n    give object you received save as method.\r\n\r\n    check the official document more details. \r\n    https://developer.adobe.com/photoshop/uxp/2022/uxp-api/reference-js/Modules/uxp/Persistent%20File%20Storage/FileSystemProvider/\r\n*/\r\n\r\ntype JpegSaveOptionsParam = {\r\n    filePath: string\r\n};\r\n\r\n/**\r\n * save document as a jpeg image in directory active document is saved.\r\n * @param param @type {JpegSaveOptionsParam}\r\n * @returns {Promise<boolean>}\r\n */\r\nexport const saveJpeg:(param:JpegSaveOptionsParam)=>Promise<boolean> = ({\r\n    filePath\r\n}) => {\r\n    return new Promise((resolve, reject) => {\r\n        filePath = setProtocol(filePath);// adding file Protocol following the global variable\r\n        console.log(filePath);\r\n        core.executeAsModal(async () => {\r\n            try {\r\n                /* turn string path into Entry Object */\r\n                const entrypath = await uxpfs.getEntryWithUrl(filePath);\r\n                console.log(entrypath);\r\n                const option = {//jpeg options\r\n                    quality: 12,\r\n                    embedColorProfile: true,\r\n                    color: whiteColor,\r\n                } as any;\r\n                await app.activeDocument.saveAs.jpg(entrypath, option);\r\n                resolve(true);\r\n            } catch (e) {\r\n                console.log(e);\r\n                reject(e);\r\n            }\r\n        }, {commandName: 'saving jpeg image'});\r\n    });\r\n};\r\n\r\ntype JpegWIthEntryParam = {\r\n    entry: any//Entry Object\r\n}\r\n\r\n/**\r\n * @param param @type {JpegWIthEntryParam}\r\n * @returns {Promise<boolean>}\r\n */\r\nconst saveJpgWithEntry = async ({\r\n    entry\r\n}:JpegWIthEntryParam):Promise<boolean> => {\r\n    return new Promise((resolve, reject) => {\r\n        core.executeAsModal(async () => {\r\n            try {\r\n                const option = {\r\n                    quality: 12,\r\n                    embedColorProfile: true,\r\n                    color: whiteColor,\r\n                } as any;\r\n                await app.activeDocument.saveAs.jpg(entry, option);\r\n                resolve(true);\r\n            } catch (e) {\r\n                console.log(e);\r\n                reject(e);\r\n            }\r\n        }, {commandName: 'save jpeg'})\r\n    })\r\n}\r\n\r\n/**\r\n * save image file on same directory where active document is saved.\r\n */\r\nexport const saveOnActiveDocumentDir = async () => {\r\n    try {\r\n        const flag = await saveJpeg({ filePath: app.activeDocument.path });\r\n        console.log(flag);\r\n    } catch (e) {\r\n        app.showAlert(e);\r\n    }\r\n};\r\n\r\n/**\r\n * create folder in same active document folder .\r\n * and save jpeg image in created folder.\r\n */\r\nexport const saveActiveDocumentInFolder = async () => {\r\n    try {\r\n        const folderName = 'jpeg';\r\n        const folderPath = path.join(path.dirname(app.activeDocument.path), folderName);\r\n        await mkdir(folderPath);// create follder\r\n        await saveJpeg({ filePath: folderPath });\r\n    } catch (e) {\r\n        app.showAlert(e);\r\n    }\r\n}\r\n\r\n/**\r\n * save document as jpeg image on desktop.\r\n * and keeping its file name\r\n */\r\nexport const saveOnDesktop = async () => {\r\n    try {\r\n        const flag = await saveJpeg({ filePath: DESKTOPPATH });\r\n        console.log(flag);\r\n    } catch (e) {\r\n        app.showAlert(e);\r\n    }\r\n};\r\n\r\n/**\r\n * save image on desktop but as a different file name.\r\n */\r\nexport const saveOnDesktopAsImg = async () => {\r\n    try {\r\n        let savePath = path.join(DESKTOPPATH, 'img.jpg');\r\n        savePath = setProtocol(savePath);\r\n        console.log(savePath);\r\n        //uxpfs.createEntryWithUrl create Entry object from string file path.\r\n        const flag = await saveJpgWithEntry({ entry: await uxpfs.createEntryWithUrl(savePath, { overwrite: true }) });\r\n        console.log(flag);\r\n    } catch (e) {\r\n        app.showAlert(e);\r\n    }\r\n};\r\n\r\n/**\r\n * save jpg image with picker(dialog)\r\n */\r\nexport const saveWithPicker = async () => {\r\n    const entry = await uxpfs.getFileForSaving('catimg.jpg', {types: ['jpg']});\r\n    console.log(entry);\r\n    await saveJpgWithEntry({ entry });\r\n};\r\n\r\n/**\r\n * make folder in directory you picked.\r\n */\r\nexport const mkdirWithPicker = async () => {\r\n    try {\r\n        const folderEntry = await uxpfs.getFolder();\r\n        console.log(folderEntry);\r\n        const folerPath = setProtocol(folderEntry.nativePath);\r\n        await fs.mkdir(path.join(folerPath, 'newfolder'));\r\n    } catch (e) {\r\n        await app.showAlert(e);\r\n    }\r\n};\r\n\r\n/**\r\n * register directory path on Panel.\r\n */\r\nexport const registerDir = async () => {\r\n    try {\r\n        const folderEntry = await uxpfs.getFolder();\r\n        document.getElementById('dir').textContent = folderEntry.nativePath;\r\n    } catch (e) {\r\n        await app.showAlert(e);\r\n    }\r\n};\r\n\r\n/**\r\n * write text data in registered directory.\r\n */\r\nexport const writeTextFile = async () => {\r\n    try {\r\n        const dir = document.getElementById('dir').textContent;\r\n        if(dir === '')throw new Error('no registered directory');\r\n        const filePath = path.join(setProtocol(dir), 'text');\r\n        console.log(filePath);\r\n        await fs.writeFile(filePath, 'hello from photoshop');\r\n        await app.showAlert('saved text file');\r\n    } catch (e) {\r\n        await app.showAlert(e);\r\n    }\r\n}","import { app } from 'photoshop';\r\n\r\nimport { DESKTOPPATH } from './fileSystem/root';\r\nimport { saveOnActiveDocumentDir,\r\n    saveOnDesktop,\r\n    saveOnDesktopAsImg,\r\n    saveWithPicker,\r\n    mkdirWithPicker,\r\n    saveActiveDocumentInFolder,\r\n    registerDir,\r\n    writeTextFile } from './fileSystem/saveSystem';\r\n\r\nconst save_doc = document.getElementById('save_doc');\r\nconst save_folder = document.getElementById('save_folder');\r\nconst call_desktop = document.getElementById('call_desktop');\r\nconst save_desktop = document.getElementById('save_desktop');\r\nconst save_desktop_img = document.getElementById('save_desktop_img');\r\nconst save_picker = document.getElementById('save_picker');\r\nconst mkdir_picker = document.getElementById('mkdir_picker');\r\nconst register_directory = document.getElementById('register_directory');\r\nconst writeText = document.getElementById('writeText');\r\n\r\nsave_folder.addEventListener('click', async () => {\r\n    await saveActiveDocumentInFolder();\r\n});\r\n\r\ncall_desktop.addEventListener('click', async () => {\r\n    await app.showAlert(DESKTOPPATH);\r\n});\r\n\r\nsave_doc.addEventListener('click', async () => {\r\n    await saveOnActiveDocumentDir();\r\n});\r\n\r\nsave_desktop.addEventListener('click', async () => {\r\n    await saveOnDesktop();\r\n});\r\n\r\nsave_desktop_img.addEventListener('click', async () => {\r\n    await saveOnDesktopAsImg();\r\n});\r\n\r\nsave_picker.addEventListener('click', async () => {\r\n    await saveWithPicker();\r\n});\r\n\r\nmkdir_picker.addEventListener('click', async () => {\r\n    await mkdirWithPicker();\r\n});\r\n\r\nregister_directory.addEventListener('click', async () => {\r\n    await registerDir();\r\n});\r\n\r\nwriteText.addEventListener('click', async () => {\r\n    await writeTextFile();\r\n});","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"photoshop\");","module.exports = require(\"uxp\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}